#include <iostream>
#include <conio.h>

struct tvector
{
	int svec[80];
};

using namespace std;



void cargar(tvector vec[],int n)
{
	int i,j;
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			cout << "Ingrese el elemento: ";
			cin >> vec[i].svec[j];
		}
	}
}

void cargar_mat(tvector vec[],int n)
{
	int i,j,a=1,b=1,c=1;
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			if(i<j)
			{
				vec[i].svec[j]=a;
				a=a+2;
			}
			else
			{
				if(j<i)
				{
					vec[i].svec[j]=b;
					b=b+2;
				}
				else
				{
					vec[i].svec[j]=c;
					c=c+1;
				}
			}
		}
	}
}

void orden (int vec[],int n)
{
	int i,j,aux;
	for(i=0;i<n;i++)
	{
		for(j=i+1;j<n;j++)
		{
			if(vec[i]>vec[j])
			{
				aux=vec[i];
				vec[i]=vec[j];
				vec[j]=aux;
			}
		}
	}
}

void ordenar_ascendente(tvector vec[],int n)
{
	int i,j,a=n*n,avec[80];
	for(i=0;i<n;i++)
	{
		orden(vec[i].svec,n);
	}
}

bool verif_primo(int n)
{
	bool k=true;
	int i;
	for(i=2;i<n;i++)
	{
		if(n%2==0)
		{
			k=false;
		}
	}
	return k;
}

void ornar(tvector vec[],int n)
{
	int i,j,vecA[80],nA=0;
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			if(verif_primo(vec[i].svec[j])==true)
			{
				vecA[nA]=vec[i].svec[j];
				nA++;
			}
		}
	}
	orden(vecA,nA);
	nA=0;
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			if(verif_primo(vec[i].svec[j])==true)
			{
				vec[i].svec[j]=vecA[nA];
				nA++;
			}
		}
	}
}


void mostrar(tvector vec[],int n)
{
	int i,j;
	
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
		{
			cout << vec[i].svec[j] << " ";
		}
		cout << "|| ";
	}
}

void main()
{
	int a;
	tvector avec[80];
	cout << "Ingrese el tamaÃ±o: ";
	cin >> a;
	//argar_mat(avec,a);
	cargar(avec,a);
	mostrar(avec,a);
	cout << endl;
	//rdenar_ascendente(avec,a);
	ornar(avec,a);
	mostrar(avec,a);

	getch();
}
